<launch>
    <!-- <arg name="camera_link_pose" value="0.94 0.17 0.75 0.55 0.6 -0.36 -0.36 "/> -->
    <arg name="camera_link_pose" value="0.95 0.1 0.73 0.603601 0.590586 -0.36625 -0.382251 "/>
    
     <arg name="simulation" default="false" />
     <arg name="kinect2" default="false"/>
     <group if="$(arg kinect2)" >
        <!-- octomap parameters for moveit -->
         <group ns="move_group" >
             <param name="octomap_frame" type="string" value="kinect2_link" />
             <param name="octomap_resolution" type="double" value="0.04" />
             <rosparam command="load" file="$(find crustcrawler_moveit_config)/config/kinect2_sensor.yaml" />
         </group>
     </group>
     
     <group if="$(arg simulation)" >
        <!-- octomap parameters for moveit -->
         <group ns="move_group" >
             <param name="octomap_frame" type="string" value="camera_link" />
             <param name="octomap_resolution" type="double" value="0.02" />
             <rosparam command="load" file="$(find crustcrawler_moveit_config)/config/kinect_sensor.yaml" />
         </group>
     </group>

     <group if="$(arg kinect2)" >
        <!-- launch openni to talk to kinect -->
         <!-- <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch"/> -->
         <!-- Users update this to set transform between camera and robot -->
         <node pkg="tf" type="static_transform_publisher" name="camera_link_broadcaster"
               args="$(arg camera_link_pose) /base /kinect2_link 100" />
        <!-- octomap parameters for moveit -->
         <group ns="move_group" >
             <param name="octomap_frame" type="string" value="kinect2_link" />
             <param name="octomap_resolution" type="double" value="0.03" />
             <rosparam command="load" file="$(find crustcrawler_moveit_config)/config/kinect2_sensor.yaml" />
         </group>
     </group>
     
     
     <arg name="kinect" default="false"/>
     <group if="$(arg kinect)" >
         <!-- launch openni to talk to kinect -->
         <include file="$(find freenect_launch)/launch/freenect.launch">
             <!-- These args are workarounds for tf_prefix issues in freenect.launch -->
             <arg name="rgb_frame_id" value="camera_rgb_optical_frame"/>
             <arg name="depth_frame_id" value="camera_depth_optical_frame"/>
         </include>
         <!-- Users update this to set transform between camera and robot -->
         <node pkg="tf" type="static_transform_publisher" name="camera_link_broadcaster"
               args="$(arg camera_link_pose) /base /camera_link 100" />

         <!-- octomap parameters for moveit -->
         <group ns="move_group" >
             <param name="octomap_frame" type="string" value="camera_link" />
             <param name="octomap_resolution" type="double" value="0.02" />
             <rosparam command="load" file="$(find crustcrawler_moveit_config)/config/kinect_sensor.yaml" />
         </group>
     </group>
     <arg name="xtion" default="false"/>
     <group if="$(arg xtion)" >
         <!-- launch openni to talk to xtion -->
         <include file="$(find openni2_launch)/launch/openni2.launch">
             <!-- These args are workarounds for tf_prefix issues in openni.launch -->
             <arg name="rgb_frame_id" value="camera_rgb_optical_frame" />
             <arg name="depth_frame_id" value="camera_depth_optical_frame" />
         </include>
         <!-- Users update this to set transform between camera and robot -->
         <!-- This example has the Xtion mounted to the chest of the robot -->
         <node pkg="tf" type="static_transform_publisher" name="camera_link_broadcaster"
               args="$(arg camera_link_pose) /base /camera_link 100" />

         <!-- octomap parameters for moveit -->
         <group ns="move_group" >
             <param name="octomap_frame" type="string" value="camera_link" />
             <param name="octomap_resolution" type="double" value="0.02" />
             <rosparam command="load" file="$(find crustcrawler_moveit_config)/config/xtion_sensor.yaml" />
         </group>
     </group>
</launch>
